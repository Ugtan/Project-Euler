"""The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?"""

from functools import reduce


def triangularnum(n):
    return reduce(lambda x, y: x + y, range(1, n + 1))


def main():
    for num in range(1, 10000):
        counter = 1
        tri_num = triangularnum(num)

        for divisor in range(1, tri_num // 2 + 1):
            if tri_num % divisor == 0:
                counter = counter + 1
        if counter > 500:
            print("{} is the First Triangular Number to have {} Divisors and it is the Triangular Number of Digit {}".format(tri_num, counter, num))
            break


if __name__ == "__main__":
    main()
